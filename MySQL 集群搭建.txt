MySQL Cluster(MySQL 集群) 初试

    MySQL Cluster 是MySQL适合于分布式计算环境的高实用、高冗余版本。它采用了NDB Cluster 存储引擎，允许在1个 Cluster 中运行多个MySQL服务器。
在MyQL 5.0及以上的二进制版本中、以及与最新的Linux版本兼容的RPM中提供了该存储引擎。（注意，要想获得MySQL Cluster 的功能，必须安装 mysql-server 
和 mysql-max RPM）。目前能够运行MySQL Cluster 的操作系统有Linux、Mac OS X和Solaris（一些用户通报成功地在FreeBSD上运行了MySQL Cluster ，
但MySQL AB公司尚未正式支持该特性）。

一、MySQL Cluster概述
    MySQL Cluster 是一种技术，该技术允许在无共享的系统中部署“内存中”数据库的 Cluster 。通过无共享体系结构，系统能够使用廉价的硬件，而且对软硬件
无特殊要求。此外，由于每个组件有自己的内存和磁盘，不存在单点故障。
    MySQL Cluster 由一组计算机构成，每台计算机上均运行着多种进程，包括MySQL服务器，NDB Cluster 的数据节点，管理服务器，以及（可能）专门的数据访问程序。
所有的这些节点构成一个完成的MySQL集群体系。数据保存在“NDB存储服务器”的存储引擎中，表（结构）则保存在“MySQL服务器”中。应用程序通过“MySQL服务器”访问
这些数据表，集群管理服务器通过管理工具(ndb_mgmd)来管理“NDB存储服务器”。通过将MySQL Cluster 引入开放源码世界，MySQL为所有需要它的人员提供了具有高可
用性、高性能和可缩放性的 Cluster 数据管理。

二、MySQL Cluster 基本概念
    “NDB” 是一种“内存中”的存储引擎，它具有可用性高和数据一致性好的特点。
MySQL Cluster 能够使用多种故障切换和负载平衡选项配置NDB存储引擎，但在 Cluster 级别上的存储引擎上做这个最简单。MySQL Cluster的NDB存储引擎包含完整的
数据集，仅取决于 Cluster本身内的其他数据。目前，MySQL Cluster的 Cluster部分可独立于MySQL服务器进行配置。在MySQL Cluster中， Cluster的每个部分被视
为1个节点。

    管理(MGM)节点：这类节点的作用是管理MySQL Cluster内的其他节点，如提供配置数据、启动并停止节点、运行备份等。由于这类节点负责管理其他节点的配置，应在启
动其他节点之前首先启动这类节点。MGM节点是用命令“ndb_mgmd”启动的。数据节点：这类节点用于保存 Cluster的数据。数据节点的数目与副本的数目相关，是片段的
倍数。例如，对于两个副本，每个副本有两个片段，那么就有4个数据节点。不过没有必要设置多个副本。数据节点是用命令“ndbd”启动的。SQL节点：这是用来访问 
Cluster数据的节点。对于MySQL Cluster，客户端节点是使用NDB Cluster存储引擎的传统MySQL服务器。通常，SQL节点是使用命令“mysqld –ndbcluster”启动的，
或将“ndbcluster”添加到“my.cnf”后使用“mysqld”启动。注释：在很多情况下，术语“节点”用于指计算机，但在讨论MySQL Cluster时，它表示的是进程。在单台计算
机上可以有任意数目的节点，为此，我们采用术语“ Cluster主机”。

    管理服务器(MGM节点)负责管理 Cluster配置文件和 Cluster日志。 Cluster中的每个节点从管理服务器检索配置数据，并请求确定管理服务器所在位置的方式。
当数据节点内出现新的事件时，节点将关于这类事件的信息传输到管理服务器，然后，将这类信息写入 Cluster日志。此外，可以有任意数目的 Cluster客户端进程或
应用程序。它们分为两种类型：
标准MySQL客户端：对于MySQL Cluster，它们与标准的（非 Cluster类）MySQL没有区别。换句话讲，能够从用PHP、Perl、C、C++、Java、Python、Ruby等编写的
现有MySQL应用程序访问MySQL Cluster。管理客户端：这类客户端与管理服务器相连，并提供了启动和停止节点、启动和停止消息跟踪（仅调试版本）、显示节点版本
和状态、启动和停止备份等的命令。

三、开始准备
1、准备服务器
现在，我们计划建立有5个节点的MySQL CLuster体系，因此需要用到5台机器，分别做如下用途：

192.168.81.147 管理节点
192.168.81.143 192.168.81.144 数据节点
192.168.81.145 195.168.81.146 SQL节点

1、配置好五台虚拟机（CentOS 7.2）。
2、在官网下载Mysql-Cluster二进制安装包（MySQL Cluster 7.5.5）。
3、配置管理节点（192.168.81.147）。 
（1） cd /var/tmp 
（2） tar -zxvf mysql-5.7.17-ndb-7.5.6-linux2.6-i686.tar.gz，解压安装包。 
（3） cd mysql-5.7.17-ndb-7.5.6-linux2.6-i686 
（4） cp bin/ndb_mgm* /usr/local/bin 
（5） cd /usr/local/bin 
（6） chmod +x ndb_mgm*
4、配置数据节点（192.168.81.143 192.168.81.144）。 
（1） cd /var/tmp 
（2）tar -zxvf mysql-5.7.17-ndb-7.5.6-linux-i686-glibc23.tar.gz 
（3） cd mysql-5.7.17-ndb-7.5.6-linux-i686-glibc23 
（4） cp bin/ndbmtd /usr/local/bin/ndbmtd
5、配置SQL节点。（192.168.81.145 195.168.81.146 ） 
（1）groupadd mysql 
（2） useradd -g mysql -s /bin/false mysql 
（3） cd /var/tmp 
（4） tar -C /usr/local -xzvf mysql-cluster-gpl-7.5.6-linux2.6.tar.gz 
（5） ln -s /usr/local/mysql-cluster-gpl-7.5.6-linux2.6-i686 /usr/local/mysql 
（6） cd mysql 
（7） mysqld –initialize –basedir=/usr/local/mysql –datadir=/usr/local/mysql/data 
（这时会出现MySQL的登录密码，请记好该密码）。 
（8） chown -R root . 
（9） chown -R mysql data 
（10） chgrp -R mysql . 
（11） cp support-files/mysql.server /etc/rc.d/init.d/ 
（12） chmod +x /etc/rc.d/init.d/mysql.server 
（13） chkconfig –add mysql.server
6、配置数据节点和SQL节点的my.cnf。 
（1）vi /etc/my.cnf 
（2）将my.cnf文件改为如下内容

    [mysqld] 
    ndbcluster # run NDB storage engine 
    [mysql_cluster] 
    ndb-connectstring=192.168.0.10 # location of management server

7、配置管理节点的config.ini。 
（1）mkdir /var/lib/mysql-cluster 
（2）cd /var/lib/mysql-cluster 
（3） vi config.ini 
（4）将如下内容复制到config.ini。

[ndbd default] 
NoOfReplicas=2 
DataMemory=80M 
IndexMemory=18M 
[ndb_mgmd] 
NodeId=1 
hostname=192.168.81.147 
datadir=/var/lib/mysql-cluster 
[ndbd] 
NodeId=2 
hostname=192.168.81.143 
datadir=/usr/local/mysql/data 
[ndbd] 
NodeId=3 
hostname=192.168.81.144 
datadir=/usr/local/mysql/data 
[mysqld] 
NodeId=4 
hostname=192.168.81.145 
[mysqld] 
NodeId=5 
hostname=192.168.81.146

8、启动mysql集群。启动顺序为：管理节点→数据节点→SQL节点。 
（1）启动管理节点：ndb_mgmd -f /var/lib/mysql-cluster/config.ini 
（2）启动数据节点：/usr/local/mysql/bin/ndbd –initial（首次启动）/usr/local/mysql/bin/ndbd（非首次启动） 
（3）启动SQL节点：/usr/local/mysql/bin/mysqld_safe –user=mysql

9、启动成功，进行测试。 
（1）在一个SQL节点上进行数据操作，看另一个SQL节点是否能同步数据。 
    shell> /usr/local/mysql/bin/mysql -u root -p 
    mysql>show databases; 
    mysql>create database test1; 
    mysql>use test1; 
    mysql>CREATE TABLE student (age INT) ENGINE=NDB; //这里必须指定数据库表的引擎为NDB,否则同步失败 
    mysql> INSERT INTO student VALUES (1); 
    mysql> SELECT * FROM student; 
（2）关闭一个数据节点 ，在另外一个节点写输入，开启关闭的节点，看数据是否同步过来。首先把数据结点1重启，然后在结点2上添加数据。 
    mysql> INSERT INTO student () VALUES (3333); 
    mysql> SELECT * FROM student;

若启动管理节点报错，使用ndb_mgmd –skip-config-cache -f /var/lib/mysql-cluster/config.ini

启动、关闭或者重启SQL节点时，使用/etc/init.d/mysql.server stop/start/restart




