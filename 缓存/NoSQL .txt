NoSQL数据库的四大分类

1、键值(Key-Value)存储数据库
  这一类数据库主要会使用到一个哈希表，这个表中有一个特定的键和一个指针指向特定的数据。
  Key/value模型对于IT系统来说的优势在于简单、易部署。但是如果DBA只对部分值进行查询或更新的时候，
  Key/value就显得效率低下了。举例如：Tokyo Cabinet/Tyrant, Redis, Voldemort, Oracle BDB.
  
2、列存储数据库。
  这部分数据库通常是用来应对分布式存储的海量数据。
  键仍然存在，但是它们的特点是指向了多个列。这些列是由列家族来安排的。如：Cassandra, HBase, Riak.
  
3、文档型数据库
  文档型数据库的灵感是来自于Lotus Notes办公软件的，而且它同第一种键值存储相类似。
  该类型的数据模型是版本化的文档，半结构化的文档以特定的格式存储，比如JSON。
  文档型数据库可 以看作是键值数据库的升级版，允许之间嵌套键值。而且文档型数据库比键值数据库的查询效率更高。
  如：CouchDB, MongoDb. 国内也有文档型数据库SequoiaDB，已经开源。
  
4、图形(Graph)数据库
  图形结构的数据库同其他行列以及刚性结构的SQL数据库不同，它是使用灵活的图形模型，并且能够扩展到多个服务器上。
  NoSQL数据库没有标准的查询语言(SQL)，因此进行数据库查询需要制定数据模型。
  许多NoSQL数据库都有REST式的数据接口或者查询API。如：Neo4J, InfoGrid, Infinite Graph.
  
  在实际Web项目开发中最常见的两种，键值对 Redis，文档型 MongoDB。


******非关系型数据库的优势：
1. 性能
NOSQL是基于键值对的，可以想象成表中的主键和值的对应关系，而且不需要经过SQL层的解析，所以性能非常高。
2. 可扩展性
同样也是因为基于键值对，数据之间没有耦合性，所以非常容易水平扩展。

******关系型数据库的优势：
1. 复杂查询
可以用SQL语句方便的在一个表以及多个表之间做非常复杂的数据查询。
2. 事务支持
使得对于安全性能很高的数据访问要求得以实现。

两种存储方式相对互补对方的弱势。
现在NoSQL也开始慢慢进化到支持关系型数据库的存储方式，比如MongoDB的复杂查询。


