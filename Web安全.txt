1、密码哈希
    PHP5.5提供了许多新特性及Api函数，其中之一就是Password Hashing API(创建和校验哈希密码)。
    比 MD5 更强大
    @ 加密 string password_hash ( string $password , integer $algo [, array $options ])
    栗子：
        $password = '123abc';
        $passwordHash = password_hash( $password, PASSWORD_DEFAULT, ['cost' => 12] );
    @ 验证 boolean password_verify ( string $password , string $hash )
    栗子：
        $password = 'test';
        if (password_verify($password, $passwordHash) === false) {
            exit('密码错误！');
        }
2、XSS攻击
    XSS攻击也是对HTML和JS的一种注入.
    php 在后台处理的方式有：
        （1）htmlentities()函数  htmlentities() 函数把字符转换为 HTML 实体。
            $str = strip_tags($str);   //过滤html标签  
            $str = htmlspecialchars($str);   //将字符内容转化为html实体
        （2）参照网上给出的一个函数使用
            function xss_clean($data){
                $data=str_replace(array('&','<','>'),array('&amp;','&lt;','&gt;'),$data);
                $data=preg_replace('/(&#*\w+)[\x00-\x20]+;/u','$1;',$data);
                $data=preg_replace('/(&#x*[0-9A-F]+);*/iu','$1;',$data);
                $data=html_entity_decode($data,ENT_COMPAT,'UTF-8');
                $data=preg_replace('#(<[^>]+?[\x00-\x20"\'])(?:on|xmlns)[^>]*+>#iu','$1>',$data);
                $data=preg_replace('#([a-z]*)[\x00-\x20]*=[\x00-\x20]*([`\'"]*)[\x00-\x20]*j[\x00-\x20]*a[\x00-\x20]*v[\x00-\x20]*a[\x00-\x20]*s[\x00-\x20]*c[\x00-\x20]*r[\x00-\x20]*i[\x00-\x20]*p[\x00-\x20]*t[\x00-\x20]*:#iu','$1=$2nojavascript...',$data);
                $data=preg_replace('#([a-z]*)[\x00-\x20]*=([\'"]*)[\x00-\x20]*v[\x00-\x20]*b[\x00-\x20]*s[\x00-\x20]*c[\x00-\x20]*r[\x00-\x20]*i[\x00-\x20]*p[\x00-\x20]*t[\x00-\x20]*:#iu','$1=$2novbscript...',$data);
                $data=preg_replace('#([a-z]*)[\x00-\x20]*=([\'"]*)[\x00-\x20]*-moz-binding[\x00-\x20]*:#u','$1=$2nomozbinding...',$data);
                $data=preg_replace('#(<[^>]+?)style[\x00-\x20]*=[\x00-\x20]*[`\'"]*.*?expression[\x00-\x20]*\([^>]*+>#i','$1>',$data);
                $data=preg_replace('#(<[^>]+?)style[\00-\x20]*=[\x00-\x20]*[`\'"]*.*?behaviour[\x00-\x20]*\([^>]*+>#i','$1>',$data);
                $data=preg_replace('#(<[^>]+?)style[\x00-\x20]*=[\x00-\x20]*[`\'"]*.*?s[\x00-\x20]*c[\x00-\x20]*r[\x00-\x20]*i[\x00-\x20]*p[\x00-\x20]*t[\x00-\x20]*:*[^>]*+>#iu','$1>',$data);
                $data=preg_replace('#</*\w+:\w[^>]*+>#i','',$data);
                do{
                    $old_data=$data;
                    $data=preg_replace('#</*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|i(?:frame|layer)|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|title|xml)[^>]*+>#i','',$data);
                }while($old_data!==$data);
                return $data;
            }
3、CSRF攻击

4、SQL注入（ PDO原理）

5、对称加密、非对称加密

6、Hash算法
